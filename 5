# собственные проекторы
import sys

A = []
M = []
N = [[0, 0], [0, 0]]
proector = [[0, 0], [0, 0]]
lambda1 = 0
lambda2 = 0
rowsA = 2

# Ввод матрицы
print('Вводите числа матрицы через пробел, для перехода на новую строку, нажмите enter')
for _ in range(rowsA):
    elem = [float(i) for i in input().split()]
    A.append(elem)


# Нахождение детерминанта
def determinant(A):
    det = A[0][0] * A[1][1] - A[0][1] * A[1][0]
    return det


# Нахождение собственных значений и векторов
def vectori(A):
    b = -A[0][0] - A[1][1]
    c = A[0][0] * A[1][1] - A[0][1] * A[1][0]

    if b  2 - 4 * c > 0:
        lambda1 = (-b + (b  2 - 4 * c)  0.5) * 0.5
        lambda2 = (-b - (b  2 - 4 * c)  0.5) * 0.5
    elif b  2 - 4 * c == 0:
        lambda1 = -b * 0.5
    else:
        sys.exit('Отрицательный дискриминант!!!')

    if lambda1 - A[1][1] != 0:
        x1 = 1
        y1 = A[1][0] * x1 / (lambda1 - A[1][1])
    else:
        y1 = 1
        x1 = A[0][1] * y1 / (lambda1 - A[0][0])
    if lambda2 - A[1][1] != 0:
        x2 = 1
        y2 = A[1][0] * x2 / (lambda2 - A[1][1])
    else:
        y2 = 1
        x2 = A[0][1] * y2 / (lambda2 - A[0][0])

    return [[x1, x2], [y1, y2]]


# Проверка на адекватность
for i in range(len(A)):
    if len(A[0]) != len(A[i]):
        sys.exit('у вас строки разной длины...')
if len(A) != len(A[0]):
    sys.exit('матрица должна быть квадратной...')
if determinant(A) == 0:
    sys.exit('о о детерминант равен нулю')
M = vectori(A)

if determinant(M) == 0:
    sys.exit('у такой матрицы нет проекторов')
else:

    N[0][0], N[1][0] = M[1][1] / determinant(M), -M[1][0] / determinant(M)
    N[1][1], N[0][1] = M[0][0] / determinant(M), -M[0][1] / determinant(M)

    for i in range(2):
        proector[0][0], proector[1][0] = round(M[0][i] * N[i][0], 3), round(M[1][i] * N[i][0], 3)
        proector[1][1], proector[0][1] = round(M[1][i] * N[i][1], 3), round(M[0][i] * N[i][1], 3)
        print('Проектор №', i + 1)
        print(proector)
