  #include < iostream >
  #include < ctime >
  #include < clocale >
  #include < cmath >
  #include < Windows.h >
  using namespace std;
int * * create_matrix(int k, int s)
{
  int * * N = new int * [k];
  for (int i = 0; i < k; i++)
  {
    N[i] = new int[s];
  }
  return N;
}
double * * create_matrix_double(int k, int s)
{
  double * * N = new double * [k];
  for (int i = 0; i < k; i++)
  {
    N[i] = new double[s];
  }
  return N;
}
void input_matrix_double(double * * N, int k, int s) {
  setlocale(0, "");
  SetConsoleCP(866);
  SetConsoleOutputCP(866);
  for (int i = 0; i < k; i++) {
    for (int j = 0; j < s; j++) {
      cout« "Put there element with index(UKAZITE ELEMRNT) ="«
      i + 1« j + 1« endl;
      cin» N[i][j];
    }
  }
}
double Det2(double a, double b, double c, double d) {
  return a * d - b * c;
}
double Det3(double * * arr)
{
  return arr[0][0] * Det2(arr[1][1], arr[1][2], arr[2][1], arr[2][2]) -
    arr[0][1] * Det2(arr[1][0], arr[1][2], arr[2][0], arr[2][2]) +
    arr[0][2] * Det2(arr[1][0], arr[1][1], arr[2][0], arr[2][1]);
}
int main() {
  setlocale(LC_ALL, "RUS");
  srand((unsigned) time(NULL));
  setlocale(0, "");
  int k, s;
  cout« "UKAZITE RAZMER"«
  endl;
  cin» k» s;
  double * * arr = create_matrix_double(k, k);
  input_matrix_double(arr, k, k);
  double K[4];
  K[0] = -1;
  K[1] = arr[0][0] + arr[1][1] + arr[2][2];
  K[2] = -(Det2(arr[0][0], arr[0][1], arr[1][0], arr[1][1]) +
    Det2(arr[1][1], arr[1][2], arr[2][1], arr[2][2]) +
    Det2(arr[0][0], arr[0][2], arr[2][0], arr[2][2]));
  K[3] = Det3(arr);
  cout« "\nPolynomial:\n";
  for (int i = 0; i < 4; i++)
  {
    cout« fixed« K[i]«
    " X^"«
    3 - i;
    if (i < 3 && K[i + 1] > 0)
      cout« " +";
  }
  return 0;
}
